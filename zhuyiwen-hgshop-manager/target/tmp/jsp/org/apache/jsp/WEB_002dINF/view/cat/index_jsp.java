/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.20.v20190813
 * Generated at: 2020-06-27 14:59:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.cat;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resource/bootstrap-treeview/css/bootstrap-treeview.css\" rel=\"stylesheet\" >\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resource/bootstrap-treeview/js/bootstrap-treeview.js\" ></script>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<div class=\"row\">\r\n");
      out.write("\t<div  class=\"col-md-4\">\r\n");
      out.write("\t\t<div id=\"tree\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t<!-- 用于添加的部分 -->\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<form id=\"addForm\">\r\n");
      out.write("\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t    <label for=\"parentName\" class=\"col-sm-3 col-form-label\">父节点</label>\r\n");
      out.write("\t\t\t\t    <input type=\"hidden\" name=\"parentId\"  id=\"parentId\">\r\n");
      out.write("\t\t\t\t    <div class=\"col-sm-6\">\r\n");
      out.write("\t\t\t\t      <input type=\"text\" disabled=\"disabled\" class=\"form-control\" id=\"parentName\">\r\n");
      out.write("\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t  <div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t    <label for=\"parentPath\" class=\"col-sm-3 col-form-label\">父path</label>\r\n");
      out.write("\t\t\t\t    <div class=\"col-sm-6\">\r\n");
      out.write("\t\t\t\t      <input type=\"text\" disabled=\"disabled\" class=\"form-control\" id=\"parentPath\">\r\n");
      out.write("\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t  \r\n");
      out.write("\t\t\t\t  <div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t  \t<input type=\"hidden\" name=\"path\" id=\"nodePath\">\r\n");
      out.write("\t\t\t\t    <label for=\"catNodeName\" class=\"col-sm-3 col-form-label\">节点名称</label>\r\n");
      out.write("\t\t\t\t    <div class=\"col-sm-6\">\r\n");
      out.write("\t\t\t\t      <input type=\"text\"  class=\"form-control\" id=\"catNodeName\" name=\"name\">\r\n");
      out.write("\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t  <button type=\"button\" onclick=\"addCat()\">添加数据</button>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<form id=\"updateForm\">\r\n");
      out.write("\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t <input type=\"hidden\" name=\"id\"  id=\"currentId\">\r\n");
      out.write("\t\t\t\t    <label for=\"currentPath\" class=\"col-sm-3 col-form-label\">节点path</label>\r\n");
      out.write("\t\t\t\t    <div class=\"col-sm-6\">\r\n");
      out.write("\t\t\t\t      <input type=\"text\" class=\"form-control\" name=\"path\" id=\"currentPath\">\r\n");
      out.write("\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t  <div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t    <label for=\"currnentNodeName\" class=\"col-sm-3 col-form-label\">节点名称</label>\r\n");
      out.write("\t\t\t\t    <div class=\"col-sm-6\">\r\n");
      out.write("\t\t\t\t      <input type=\"text\"  class=\"form-control\" id=\"currnentNodeName\" name=\"name\">\r\n");
      out.write("\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t  <button type=\"button\" onclick=\"delNode()\" id=\"btnDel\">删除节点</button>\r\n");
      out.write("\t\t\t\t  <button type=\"button\" onclick=\"saveNode()\" id=\"btnUpdate\" >保存节点</button>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>    \r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\tfunction initTree(){\r\n");
      out.write("\t\t$.post(\"cat/getTree\",{},function(data){\r\n");
      out.write("\t\t\t$('#tree').treeview({\r\n");
      out.write("\t\t\t\t  data: data,         // data is not optional\r\n");
      out.write("\t\t\t\t  levels: 2,\r\n");
      out.write("\t\t\t\t  onNodeSelected: function(event, data) {\r\n");
      out.write("\t\t\t\t\t  alert(JSON.stringify(data))\r\n");
      out.write("\t\t\t\t\t //alert(data.id + \"  \" +  data.path)\r\n");
      out.write("\t\t\t\t\t  $(\"#parentId\").val(data.id)\r\n");
      out.write("\t\t\t\t\t  $(\"#parentName\").val(data.text)\r\n");
      out.write("\t\t\t\t\t  $(\"#parentPath\").val(data.path)\r\n");
      out.write("\t\t\t\t\t  $(\"#catNodeName\").val(\"\")\r\n");
      out.write("\t\t\t\t\t  $(\"#nodePath\").val(\"\")\r\n");
      out.write("\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t  $(\"#currentId\").val(data.id)\r\n");
      out.write("\t\t\t\t\t  $(\"#currentPath\").val(data.path)\r\n");
      out.write("\t\t\t\t\t  $(\"#currnentNodeName\").val(data.text)\r\n");
      out.write("\t\t\t\t\t  if(data.nodes==null || data.nodes.length<1){\r\n");
      out.write("\t\t\t\t\t\t  $(\"#btnDel\").prop(\"disabled\",false);  \r\n");
      out.write("\t\t\t\t\t  }else{\r\n");
      out.write("\t\t\t\t\t\t  $(\"#btnDel\").prop(\"disabled\",true);  \r\n");
      out.write("\t\t\t\t\t  }  \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t  //清空表单中的数据\r\n");
      out.write("\t\t      $(\"#parentId\").val(0)\r\n");
      out.write("\t\t\t  $(\"#parentName\").val(\"\")\r\n");
      out.write("\t\t\t  $(\"#parentPath\").val(\"\")\r\n");
      out.write("\t\t\t  $(\"#catNodeName\").val(\"\")\r\n");
      out.write("\t\t\t  $(\"#nodePath\").val(\"\")\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tinitTree();\r\n");
      out.write("\t\r\n");
      out.write("\tfunction delNode() {\r\n");
      out.write("\t\t$.post(\"cat/del\",{id:$(\"#currentId\").val()},function(data){\r\n");
      out.write("\t\t\tif(data){\r\n");
      out.write("\t\t\t\talert('删除成功')\r\n");
      out.write("\t\t\t\tinitTree();\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\talert('删除失败')\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction saveNode(){\r\n");
      out.write("\r\n");
      out.write("\t\t// 计算当前节点的path\r\n");
      out.write("\t\tvar formData = $(\"#updateForm\").serialize();\r\n");
      out.write("\t\t$.post(\"cat/update\",formData,function(data){\r\n");
      out.write("\t\t\tif(data){\r\n");
      out.write("\t\t\t\talert('修改成功')\r\n");
      out.write("\t\t\t\t//刷新数据\r\n");
      out.write("\t\t\t\t//initTree();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\talert('提交失败')\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t} \r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t//添加节点\r\n");
      out.write("\tfunction addCat(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 计算当前节点的path\r\n");
      out.write("\t\t$(\"#nodePath\").val( $(\"#parentPath\").val() + \"/\" + $(\"#catNodeName\").val()); \r\n");
      out.write("\t\tvar formData = $(\"#addForm\").serialize();\r\n");
      out.write("\t\t$.post(\"cat/add\",formData,function(data){\r\n");
      out.write("\t\t\tif(data){\r\n");
      out.write("\t\t\t\talert('提交成功')\r\n");
      out.write("\t\t\t\t//刷新数据\r\n");
      out.write("\t\t\t\tinitTree();\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\talert('提交失败')\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
